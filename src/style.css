* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
:root {
  --background-color: var(--color-dark);
  --button-color: var(--color-blue);
  --font-color: var(--color-yellowish);
  --todo-color: var(var(--color-green-teal));

  --medium-priority: #ffff66;
  --high-priority: #d81616;
  --low-priority: #46db46;
  --color-yellowish: #e7e7be;
  --color-green-teal: #55a19e;
  --color-blue: #275575;
  --color-brown: #c07960;
  --color-dark: #201735;
}
body {
  background-color: var(--background-color);
  color: white;
}
.main {
  margin: 20px 50px;
}
.header {
  padding: 20px 0;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  gap: 10px;
  min-height: 10vh;
  column-gap: 30px;
}
.header-right {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  max-width: 500px;
  flex-grow: 1;
  gap: 10px;
  margin: 2px 0;
}
.header-right > * {
  flex-grow: 1;
  height: 50%;
  flex-basis: 49%;
  padding: 15px;
}
button {
  background-color: transparent;
  border: 2px solid var(--color-blue);
  border-radius: 3px;
  color: var(--font-color);
}
button:active {
  background-color: white;
  color: black;
}
button#add-todo-button {
  border-radius: 8px;
  width: 10vh;
  min-height: 10vh;
  background-color: transparent;
  flex-grow: 1;
  flex-shrink: 0;
}
button#add-todo-button:active {
  color: black;
  background-color: white;
}

.content {
  display: flex;
  column-gap: 30px;
  flex-wrap: wrap;
}
.project {
  flex-basis: 15vw;
  flex-grow: 0;
  min-width: 30ch;
  gap: 10px;
}
.project-header {
  display: flex;
  justify-content: space-between;
}
/* .delete-icon {
  background-image: url("../assets/delete_icon.svg");
  display: block;
  width: 40px;
  height: 40px;
} */

.material-symbols-outlined {
  font-variation-settings: "FILL" 0, "wght" 400, "GRAD" 0, "opsz" 24;
}

.todo-header {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  font-size: 24px;
  flex-wrap: wrap;
}
.todo-header span[data-icon-action="expand"] {
  flex-basis: 100%;
  flex-shrink: 0;
  text-align: right;
  border-bottom: 1px solid black;
  cursor: pointer;
}
.todo-options,
.project-options {
  opacity: 0;
}
.todo:hover .todo-options,
.project:hover .project-options {
  opacity: 1;
}
.todo:hover .todo-options span,
.project:hover .project-options span {
  cursor: pointer;
}

.todo {
  border-radius: 8px;
  padding: 10px 10px;
  color: var(--background-color);
  background-color: var(--color-green-teal);
  margin-top: 10px;
}
.todo p.duedate,
.todo p.description,
.todo p.creation-date {
  font-size: 12px;
  cursor: pointer;
}
.todo:has(div > input[data-icon-action="toggleCompleted"]:checked) {
  .todo-title {
    text-decoration: line-through;
  }
}

.todo p.duedate::before,
.todo p.description::before,
.todo p.creation-date::before {
  display: inline-block;
  height: 10px;
  width: 10px;
  margin-right: 4px;
  background-size: contain;
  content: "";
  transform: translateY(1px);
}
.todo p.duedate::before {
  content: ""/"alarm";
  background-image: url(../assets/alarm_icon.svg);
}
.todo p.duedate:hover::after,
.todo p.description:hover::after,
.todo p.creation-date:hover::after {
  color: var(--color-brown);
  position: absolute;
  font-weight: bolder;
  transform: translateX(50%);
  font-size: 12px;
  /* position: absolute; */
}
.todo p.description:hover::after {
  content: "description";
}
.todo p.duedate:hover::after {
  content: "duedate";
}
.todo p.creation-date:hover::after {
  content: "created in";
}
.todo p.description::before {
  content: "";
  background-image: url(../assets/description_icon.svg);
}
.todo p.creation-date::before {
  content: "";
  background-image: url(../assets/created_icon.svg);
}
.todo > .hiddenDetails {
  display: none;
}

.todo[data-todo-priority="1"] {
  border-left: 5px solid var(--low-priority);
}
.todo[data-todo-priority="2"] {
  border-left: 5px solid var(--medium-priority);
}
.todo[data-todo-priority="3"] {
  border-left: 5px solid var(--high-priority);
}

dialog {
  background-color: var(--background-color);
  color: white;
  padding: 20px;
  margin: auto;
  width: 40vh;
}
dialog button,
form button {
  padding: 15px;
  background-color: var(--color-dark);
}
dialog::backdrop {
  background-color: #0000001a;
}
dialog > form {
  display: flex;
  flex-direction: column;
  row-gap: 15px;
  margin-top: 15px;
}

dialog > form div {
  display: flex;
  flex-direction: column;
}

dialog form fieldset#priority-fieldset div {
  display: flex;
  flex-direction: row;
  gap: 5px;
}

fieldset {
  display: flex;
  flex-direction: column;
  padding: 20px;
  gap: 10px;
}
fieldset div.project-div {
  display: flex;
  flex-direction: row;
  gap: 5px;
  margin-top: 10px;
}

.dialog-heading {
  margin: 0 auto;
  text-align: center;
}

dialog .submit-close-button-container,
form .submit-close-button-container {
  margin-top: 15px;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

form .label-input-container {
  display: grid;
  grid-template-areas: "grouped";
  margin-top: 10px;
}

.todo.edit-todo {
  background-color: var(--color-blue);
}
.todo.edit-todo > h3 {
  text-align: center;
}

.label-input-container > label {
  grid-area: grouped;
  transform: translateY(-50%) translateX(5px);
  color: var(--color-yellowish);
  background-image: linear-gradient(
    var(--color-blue) calc(50% + 4px),
    var(--color-green-teal) calc(50% - 4px)
  );
  z-index: 2;
  width: max-content;
  height: max-content;
  position: relative;
  padding: 0 5px;
}
.label-input-container > input,
.label-input-container > select {
  grid-area: grouped;
  border: 4px solid var(--color-dark);
  background-color: var(--color-green-teal);
  border-radius: 4px;
  padding: 8px 5px;
  font-size: 14px;
  z-index: 1;
}

.label-input-container > input[type="number"][value="3"] {
  background-color: var(--high-priority);
}
.label-input-container > input[type="number"][value="2"] {
  background-color: var(--medium-priority);
}
.label-input-container > input[type="number"][value="1"] {
  background-color: var(--low-priority);
}
.label-input-container > label:has(+ input[type="number"][value="1"]) {
  background-image: linear-gradient(
    var(--color-blue) calc(50% + 4px),
    var(--low-priority) calc(50% - 4px)
  );
}
.label-input-container > label:has(+ input[type="number"][value="2"]) {
  background-image: linear-gradient(
    var(--color-blue) calc(50% + 4px),
    var(--medium-priority) calc(50% - 4px)
  );
}
.label-input-container > label:has(+ input[type="number"][value="3"]) {
  background-image: linear-gradient(
    var(--color-blue) calc(50% + 4px),
    var(--high-priority) calc(50% - 4px)
  );
}

/* 
#new-project-radio:not(:checked) + div {
  pointer-events: none;
} */
