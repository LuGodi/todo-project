{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://todo-project/webpack/bootstrap","webpack://todo-project/webpack/runtime/global","webpack://todo-project/webpack/runtime/publicPath","webpack://todo-project/./node_modules/date-fns/constants.mjs","webpack://todo-project/./node_modules/date-fns/toDate.mjs","webpack://todo-project/./node_modules/date-fns/startOfDay.mjs","webpack://todo-project/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","webpack://todo-project/./node_modules/date-fns/differenceInCalendarDays.mjs","webpack://todo-project/./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","webpack://todo-project/./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","webpack://todo-project/./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","webpack://todo-project/./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","webpack://todo-project/./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","webpack://todo-project/./node_modules/date-fns/locale/_lib/buildMatchFn.mjs","webpack://todo-project/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","webpack://todo-project/./node_modules/date-fns/locale/en-US.mjs","webpack://todo-project/./node_modules/date-fns/locale/en-US/_lib/localize.mjs","webpack://todo-project/./node_modules/date-fns/locale/en-US/_lib/match.mjs","webpack://todo-project/./node_modules/date-fns/_lib/defaultOptions.mjs","webpack://todo-project/./node_modules/date-fns/constructFrom.mjs","webpack://todo-project/./node_modules/date-fns/getDayOfYear.mjs","webpack://todo-project/./node_modules/date-fns/startOfYear.mjs","webpack://todo-project/./node_modules/date-fns/startOfWeek.mjs","webpack://todo-project/./node_modules/date-fns/startOfISOWeek.mjs","webpack://todo-project/./node_modules/date-fns/getISOWeekYear.mjs","webpack://todo-project/./node_modules/date-fns/getISOWeek.mjs","webpack://todo-project/./node_modules/date-fns/startOfISOWeekYear.mjs","webpack://todo-project/./node_modules/date-fns/getWeekYear.mjs","webpack://todo-project/./node_modules/date-fns/getWeek.mjs","webpack://todo-project/./node_modules/date-fns/startOfWeekYear.mjs","webpack://todo-project/./node_modules/date-fns/_lib/addLeadingZeros.mjs","webpack://todo-project/./node_modules/date-fns/_lib/format/lightFormatters.mjs","webpack://todo-project/./node_modules/date-fns/_lib/format/formatters.mjs","webpack://todo-project/./node_modules/date-fns/_lib/format/longFormatters.mjs","webpack://todo-project/./node_modules/date-fns/_lib/protectedTokens.mjs","webpack://todo-project/./node_modules/date-fns/isValid.mjs","webpack://todo-project/./node_modules/date-fns/isDate.mjs","webpack://todo-project/./node_modules/date-fns/format.mjs","webpack://todo-project/./node_modules/date-fns/compareAsc.mjs","webpack://todo-project/./node_modules/date-fns/isLastDayOfMonth.mjs","webpack://todo-project/./node_modules/date-fns/endOfDay.mjs","webpack://todo-project/./node_modules/date-fns/endOfMonth.mjs","webpack://todo-project/./node_modules/date-fns/differenceInMonths.mjs","webpack://todo-project/./node_modules/date-fns/differenceInCalendarMonths.mjs","webpack://todo-project/./node_modules/date-fns/differenceInSeconds.mjs","webpack://todo-project/./node_modules/date-fns/differenceInMilliseconds.mjs","webpack://todo-project/./node_modules/date-fns/_lib/getRoundingMethod.mjs","webpack://todo-project/./node_modules/date-fns/formatDistanceToNow.mjs","webpack://todo-project/./node_modules/date-fns/formatDistance.mjs","webpack://todo-project/./node_modules/date-fns/constructNow.mjs","webpack://todo-project/./src/todo.js","webpack://todo-project/./node_modules/date-fns/formatRelative.mjs","webpack://todo-project/./src/project.js","webpack://todo-project/./src/screenController.js","webpack://todo-project/./src/FormController.js","webpack://todo-project/./node_modules/date-fns/isPast.mjs","webpack://todo-project/./src/app.js","webpack://todo-project/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    +startOfDayLeft - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    +startOfDayRight - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const diff = _dateLeft.getTime() - _dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","import { endOfDay } from \"./endOfDay.mjs\";\nimport { endOfMonth } from \"./endOfMonth.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date) {\n  const _date = toDate(date);\n  return +endOfDay(_date) === +endOfMonth(_date);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date) {\n  const _date = toDate(date);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { compareAsc } from \"./compareAsc.mjs\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.mjs\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(\n    differenceInCalendarMonths(_dateLeft, _dateRight),\n  );\n  let result;\n\n  // Check for the difference of less than month\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (_dateLeft.getMonth() === 1 && _dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      _dateLeft.setDate(30);\n    }\n\n    _dateLeft.setMonth(_dateLeft.getMonth() - sign * difference);\n\n    // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n    let isLastMonthNotFull = compareAsc(_dateLeft, _dateRight) === -sign;\n\n    // Check for cases of one full calendar month\n    if (\n      isLastDayOfMonth(toDate(dateLeft)) &&\n      difference === 1 &&\n      compareAsc(dateLeft, _dateRight) === 1\n    ) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  }\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const yearDiff = _dateLeft.getFullYear() - _dateRight.getFullYear();\n  const monthDiff = _dateLeft.getMonth() - _dateRight.getMonth();\n\n  return yearDiff * 12 + monthDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.mjs\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.mjs\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(dateLeft, dateRight, options) {\n  const diff = differenceInMilliseconds(dateLeft, dateRight) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(dateLeft, dateRight) {\n  return +toDate(dateLeft) - +toDate(dateRight);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n","export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n","import { constructNow } from \"./constructNow.mjs\";\nimport { formatDistance } from \"./formatDistance.mjs\";\n\n/**\n * The {@link formatDistanceToNow} function options.\n */\n\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - The object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistanceToNow(date, options) {\n  return formatDistance(date, constructNow(date), options);\n}\n\n// Fallback for modularized imports:\nexport default formatDistanceToNow;\n","import { compareAsc } from \"./compareAsc.mjs\";\nimport { minutesInDay, minutesInMonth } from \"./constants.mjs\";\nimport { differenceInMonths } from \"./differenceInMonths.mjs\";\nimport { differenceInSeconds } from \"./differenceInSeconds.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * The {@link formatDistance} function options.\n */\n\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date\n * @param baseDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport function formatDistance(date, baseDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n  const minutesInAlmostTwoDays = 2520;\n\n  const comparison = compareAsc(date, baseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  const localizeOptions = Object.assign({}, options, {\n    addSuffix: options?.addSuffix,\n    comparison: comparison,\n  });\n\n  let dateLeft;\n  let dateRight;\n  if (comparison > 0) {\n    dateLeft = toDate(baseDate);\n    dateRight = toDate(date);\n  } else {\n    dateLeft = toDate(date);\n    dateRight = toDate(baseDate);\n  }\n\n  const seconds = differenceInSeconds(dateRight, dateLeft);\n  const offsetInSeconds =\n    (getTimezoneOffsetInMilliseconds(dateRight) -\n      getTimezoneOffsetInMilliseconds(dateLeft)) /\n    1000;\n  const minutes = Math.round((seconds - offsetInSeconds) / 60);\n  let months;\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options?.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance(\"lessThanXSeconds\", 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance(\"lessThanXSeconds\", 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance(\"lessThanXSeconds\", 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance(\"halfAMinute\", 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n      }\n    }\n\n    // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n\n    // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance(\"aboutXHours\", 1, localizeOptions);\n\n    // 1.5 hrs up to 24 hrs\n  } else if (minutes < minutesInDay) {\n    const hours = Math.round(minutes / 60);\n    return locale.formatDistance(\"aboutXHours\", hours, localizeOptions);\n\n    // 1 day up to 1.75 days\n  } else if (minutes < minutesInAlmostTwoDays) {\n    return locale.formatDistance(\"xDays\", 1, localizeOptions);\n\n    // 1.75 days up to 30 days\n  } else if (minutes < minutesInMonth) {\n    const days = Math.round(minutes / minutesInDay);\n    return locale.formatDistance(\"xDays\", days, localizeOptions);\n\n    // 1 month up to 2 months\n  } else if (minutes < minutesInMonth * 2) {\n    months = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"aboutXMonths\", months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft);\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    const nearestMonth = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"xMonths\", nearestMonth, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    const monthsSinceStartOfYear = months % 12;\n    const years = Math.trunc(months / 12);\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance(\"aboutXYears\", years, localizeOptions);\n\n      // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance(\"overXYears\", years, localizeOptions);\n\n      // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance(\"almostXYears\", years + 1, localizeOptions);\n    }\n  }\n}\n\n// Fallback for modularized imports:\nexport default formatDistance;\n","import { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name constructNow\n * @category Generic Helpers\n * @summary Constructs a new current date using the passed value constructor.\n * @pure false\n *\n * @description\n * The function constructs a new current date using the constructor from\n * the reference date. It helps to build generic functions that accept date\n * extensions and use the current date.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n *\n * @returns Current date initialized using the given date constructor\n *\n * @example\n * import { constructNow, isSameDay } from 'date-fns'\n *\n * function isToday<DateType extends Date>(\n *   date: DateType | number | string,\n * ): boolean {\n *   // If we were to use `new Date()` directly, the function would  behave\n *   // differently in different timezones and return false for the same date.\n *   return isSameDay(date, constructNow(date));\n * }\n */\nexport function constructNow(date) {\n  return constructFrom(date, Date.now());\n}\n\n// Fallback for modularized imports:\nexport default constructNow;\n","//should the error handling part be here or in a separate form validation function\nimport { formatRelative, formatDistanceToNow } from \"date-fns\";\nexport class Todo {\n  #creationDate = new Date();\n\n  completed = false;\n\n  static todoIdControl = 0;\n\n  constructor(\n    title,\n    description = \"\",\n    duedate = \"\",\n    priority = 1,\n    parentProject\n  ) {\n    if (priority > 3 || priority < 1) throw new Error(\"invalid priority\");\n    this.title = title;\n    this.description = description;\n    this.duedate = duedate;\n    this.todoPriority = priority;\n    this.parentProject = parentProject;\n    this.Id = Todo.todoIdControl++;\n\n    //priorities will be low medium high, add a check condition\n  }\n\n  set priority(newpriority) {\n    if (newpriority > 3 || newpriority < 1) {\n      throw new Error(\"priority must be 1 2 or 3\");\n      return;\n    }\n    const oldPriority = this.todoPriority;\n    this.todoPriority = newpriority;\n    console.log(\n      `Todo ${this.title} priority changed from ${oldPriority} to ${this.priority}`\n    );\n    return this;\n  }\n  get priority() {\n    return this.todoPriority;\n  }\n  get savedCreationDate() {\n    return this.#creationDate;\n  }\n  get creationTime() {\n    //add here the date-fns\n    const relativeTime = formatRelative(this.#creationDate, Date());\n    return relativeTime;\n  }\n  set loadCreationDate(time) {\n    console.log(\"creation date loading\");\n    console.log(time);\n\n    this.#creationDate = new Date(time);\n    console.log(this.#creationDate);\n    return this.#creationDate;\n  }\n  get timeToDuedate() {\n    if (this.duedate === \"\" || this.duedate === false) {\n      return;\n    }\n    const timeToDuedate = formatDistanceToNow(this.duedate, {\n      addSuffix: true,\n    });\n    console.log(timeToDuedate);\n    return timeToDuedate;\n  }\n  // set completed(flag) {\n  //   if (flag === true) console.log(`task ${this.title} completed`);\n  //   this.#completed = flag;\n  // }\n  // get completed() {\n  //   return this.#completed;\n  // }\n\n  toString() {\n    return `A todo titled - ${this.title} -, id ${this.Id}, duedate set to ${\n      this.duedate === false || this.duedate === \"\" ? \"None\" : this.duedate\n    }, with priority ${this.priority} created at ${this.#creationDate}`;\n  }\n\n  static loadTodo(taskData, parentProject) {\n    // const taskData = JSON.parse(todoJsonString);\n    console.log(taskData);\n    const task = new Todo(\n      taskData.title,\n      taskData.description,\n      taskData.duedate,\n      taskData.todoPriority,\n      parentProject\n    );\n    task.loadCreationDate = taskData.createdIn;\n    task.completed = taskData.completed;\n    return task;\n  }\n\n  toJSON(key) {\n    const data = Object.assign({}, this);\n    data.createdIn = this.#creationDate;\n\n    // const data = this.saveTodo();\n    // const parsedData = JSON.parse(data);\n    // const savedTodo = structuredClone(this);\n    // const date = this.savedCreationDate;\n    // savedTodo.createdIn = date;\n    // console.log(savedTodo);\n    // return savedTodo;\n\n    return data;\n  }\n}\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { format } from \"./format.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link formatRelative} function options.\n */\n\n/**\n * @name formatRelative\n * @category Common Helpers\n * @summary Represent the date in words relative to the given base date.\n *\n * @description\n * Represent the date in words relative to the given base date.\n *\n * | Distance to the base date | Result                    |\n * |---------------------------|---------------------------|\n * | Previous 6 days           | last Sunday at 04:30 AM   |\n * | Last day                  | yesterday at 04:30 AM     |\n * | Same day                  | today at 04:30 AM         |\n * | Next day                  | tomorrow at 04:30 AM      |\n * | Next 6 days               | Sunday at 04:30 AM        |\n * | Other                     | 12/31/2017                |\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to format\n * @param baseDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The date in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws `options.locale` must contain `formatRelative` property\n *\n * @example\n * // Represent the date of 6 days ago in words relative to the given base date. In this example, today is Wednesday\n * const result = formatRelative(subDays(new Date(), 6), new Date())\n * //=> \"last Thursday at 12:45 AM\"\n */\nexport function formatRelative(date, baseDate, options) {\n  const _date = toDate(date);\n  const _baseDate = toDate(baseDate);\n\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const diff = differenceInCalendarDays(_date, _baseDate);\n\n  if (isNaN(diff)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let token;\n  if (diff < -6) {\n    token = \"other\";\n  } else if (diff < -1) {\n    token = \"lastWeek\";\n  } else if (diff < 0) {\n    token = \"yesterday\";\n  } else if (diff < 1) {\n    token = \"today\";\n  } else if (diff < 2) {\n    token = \"tomorrow\";\n  } else if (diff < 7) {\n    token = \"nextWeek\";\n  } else {\n    token = \"other\";\n  }\n\n  const formatStr = locale.formatRelative(token, _date, _baseDate, {\n    locale,\n    weekStartsOn,\n  });\n  return format(_date, formatStr, { locale, weekStartsOn });\n}\n\n// Fallback for modularized imports:\nexport default formatRelative;\n","//maybe composition to make them share a property pointing to the same place\n//like a relational table\nimport { Todo } from \"./todo\";\nexport class Project {\n  todoList = [];\n  // #creationDate = new Date();\n\n  constructor(name, description = \"\") {\n    this.name = name;\n    this.description = description;\n  }\n\n  addToProject(task) {\n    this.todoList.push(task);\n    console.log(\n      `${this.todoList[this.todoList.length - 1].toString()} added to ${\n        this.name\n      }`\n    );\n    return task;\n  }\n  removeFromProject(task) {\n    const taskIndex = this.#returnTodoIndex(task);\n    if (taskIndex !== false) {\n      this.todoList.splice(taskIndex, 1);\n      console.log(`${task.toString()} removed from todos`);\n    } else {\n      console.log(`${task.toString()} was not found in array`);\n    }\n    return this.todoList;\n  }\n  #returnTodoIndex(task) {\n    const index = this.todoList.indexOf(task);\n    return index === -1 ? false : index;\n  }\n\n  find(property, value) {\n    for (let todo of this.todoList) {\n      if (todo[property] === value) {\n        return todo;\n      }\n    }\n  }\n  //TODO REFACTOR TO USE FILTER INSTEAD AND DELETE FINDTODOBYID AND FINDINPROJECT\n  filter(fun) {\n    const returnTodos = [];\n    for (let todo of this.todoList) {\n      const currentTodo = todo;\n      if (fun(currentTodo) === true) {\n        returnTodos.push(currentTodo);\n      }\n    }\n    return returnTodos;\n  }\n  toString() {\n    return `Project ${\n      this.name\n    } contains the following todos:\\n${this.listTodos()}`;\n  }\n  listTodos(func) {\n    let todoListStr = \"\";\n    for (let todo of this.todoList) {\n      if (func === undefined) {\n        todoListStr += todo.toString();\n        todoListStr += \"\\n\";\n      } else {\n        func(todo);\n      }\n    }\n    return todoListStr;\n  }\n\n  static loadProject(projectJSONString) {\n    const parsedProject = JSON.parse(projectJSONString);\n    // parsedProject.todoList;\n    const loadProject = new Project(\n      parsedProject.name,\n      parsedProject.description\n    );\n    //I need to save the todoList\n    // for (const todo of parsedProject.todoList){\n    //   const todoInstance =\n    // }\n    console.log(loadProject);\n    return loadProject;\n  }\n  saveProject() {\n    const data = JSON.stringify(this);\n    console.log(data);\n    return data;\n  }\n\n  toJSON(key) {\n    if (key === \"parentProject\") {\n      return undefined;\n    }\n    return this;\n  }\n}\n// export const defaultProject = new Project(\"Default\");\n","import { app } from \"./app\";\nimport { FormController } from \"./FormController\";\nimport { format } from \"date-fns\";\nimport deleteIcon from \"../assets/delete_icon.svg\";\nexport class ScreenController {\n  static contentDiv = document.querySelector(\".content\");\n  static dateDiv = {\n    container: document.querySelector(\"#date\"),\n    weekDay: document.querySelector(\"#day-of-the-week\"),\n    monthDay: document.querySelector(\"#day-of-the-month\"),\n    month: document.querySelector(\"#month\"),\n  };\n\n  static buttons = {\n    buttonContainer: document.querySelector(\".header\"),\n    addTodo: document.querySelector(\"#add-todo-button\"),\n    addProject: document.querySelector(\"#add-project-button\"),\n    removeProject: document.querySelector(\"#remove-project-button\"),\n  };\n  static #cacheDomTodos = [];\n  static init() {\n    this.renderAllProjects();\n    this.date();\n    this.initEventListeners();\n  }\n  static initEventListeners() {\n    this.buttons.buttonContainer.addEventListener(\"click\", (event) => {\n      if (event.target.tagName === \"BUTTON\") {\n        console.log(event.target.dataset);\n        if (event.target.dataset.dialog) {\n          this.#openDialog(event.target.dataset.dialog);\n        } else if (event.target.dataset.action) {\n          console.log(event.target.dataset.action);\n          const func = event.target.dataset.action;\n          app[func]();\n        }\n      }\n    });\n\n    this.contentDiv.addEventListener(\"click\", (event) => {\n      if (event.target.dataset.iconAction === \"delete\") {\n      }\n    });\n    // this.contentDiv.addEventListener(\"click\", (event) => {\n    //   console.log(event.target);\n    //   if (event.target.dataset.iconAction !== undefined) {\n    //     console.log(event.target.dataset.iconAction);\n    //     this[event.target.dataset.iconAction + \"Todo\"](\n    //       event.target.parentElement.parentElement.parentElement.dataset.todoId\n    //     );\n    //   }\n    // });\n  }\n  static date() {\n    const today = new Date();\n    this.dateDiv.weekDay.textContent = format(today, \"EEEE\");\n    this.dateDiv.month.textContent = format(today, \"MMMM\");\n    this.dateDiv.monthDay.textContent = format(today, \"d\");\n  }\n  static #openDialog(dialogTarget) {\n    //error was being throw because value of this inside event listener is the window object\n    FormController[dialogTarget].dialog.showModal();\n    // FormController.addTodoForm.dialog.showModal();\n    FormController.populateAddTodoForm();\n  }\n  static #emptyCacheDomTodos() {\n    this.#cacheDomTodos.splice(0, this.#cacheDomTodos.length);\n  }\n  static #addProject(project, projectIndex) {\n    const div = document.createElement(\"div\");\n    div.classList.add(\"project\");\n\n    div.dataset.projectIndex = projectIndex;\n    const span = document.createElement(\"span\");\n    span.classList.add(\"project-header\");\n    span.textContent = project.name;\n    span.append(this.#addProjectOptions());\n    div.append(span);\n    div.addEventListener(\"click\", this.#projectEventListeners);\n    return div;\n  }\n\n  static #projectEventListeners(event) {\n    console.log(event.target.dataset.iconAction === \"delete-project\");\n    if (event.target.dataset.iconAction === \"delete-project\") {\n      console.log(\"delete project\");\n      app.deleteProject(event.currentTarget.dataset.projectIndex);\n      ScreenController.renderAllProjects();\n    }\n  }\n\n  static #addTodo(todo) {\n    const div = document.createElement(\"div\");\n    div.classList.add(\"todo\");\n    const expandIcon = this.#addSvgIcon(\"expand_more\");\n    expandIcon.dataset.iconAction = \"expand\";\n    const checkCompleted = document.createElement(\"div\");\n    const checkCompletedInput = document.createElement(\"input\");\n    checkCompletedInput.type = \"checkbox\";\n    checkCompletedInput.checked = todo.completed;\n    checkCompletedInput.dataset.iconAction = \"toggleCompleted\";\n    checkCompleted.append(checkCompletedInput);\n    const divHeader = document.createElement(\"div\");\n    divHeader.classList.add(\"todo-header\");\n    const spanTaskName = document.createElement(\"span\");\n    spanTaskName.classList.add(\"todo-title\");\n    divHeader.append(\n      expandIcon,\n      checkCompleted,\n      spanTaskName,\n      this.#addTodoOptions()\n    );\n    const divParagraphDueDate = document.createElement(\"p\");\n    divParagraphDueDate.classList.add(\"duedate\");\n    spanTaskName.textContent = todo.title;\n    divParagraphDueDate.textContent =\n      todo.duedate === \"\" ? \"---- ----\" : todo.timeToDuedate;\n\n    div.append(divHeader, divParagraphDueDate);\n    div.dataset.todoId = todo.Id;\n    div.dataset.todoPriority = todo.priority;\n    const divExtraInformation =\n      ScreenController.#createExpandedTodoInformation(todo);\n    div.append(divExtraInformation);\n    ScreenController.#cacheDomTodos.push(div);\n    //TODO delegate the event listener to avoid adding a lot of listeners\n    div.addEventListener(\"click\", (event) => {\n      this.#todoEventListeners(event, divExtraInformation);\n    });\n    return div;\n    //TODO Add more elements to display other status for the todo\n  }\n\n  static #todoEventListeners(event, divExtraInformation) {\n    if (event.target.dataset.iconAction !== undefined) {\n      ScreenController[event.target.dataset.iconAction + \"Todo\"](\n        event,\n        event.currentTarget.dataset.todoId,\n        divExtraInformation\n      );\n      // else if (event.target.)\n      return;\n    }\n    // if (!ScreenController.#checkIfInEditMode(this)) {\n    //   ScreenController.expandTodo(event);\n    // }\n  }\n\n  //Todo remove checkIfInEditMode and place add icon for expanding instead of the whole div\n  static toggleCompletedTodo(event, todoId) {\n    app.findAndToggleCompletedTodo(todoId);\n  }\n  static #checkIfInEditMode(todoDiv) {\n    if (todoDiv.classList.contains(\"edit-todo\")) {\n      console.log(\"todo div is in edition mode\");\n      return true;\n    }\n    return false;\n  }\n\n  static #addTodoOptions() {\n    const div = document.createElement(\"div\");\n    div.classList.add(\"todo-options\");\n    div.append(this.#addSvgIcon(\"edit\"), this.#addSvgIcon(\"delete\"));\n    return div;\n  }\n  static #addProjectOptions() {\n    const div = document.createElement(\"div\");\n    div.classList.add(\"project-options\");\n    div.append(this.#addSvgIcon(\"delete\", \"delete-project\"));\n    return div;\n  }\n\n  static editTodo(event, todoIdentifierNum) {\n    const targetDiv = event.currentTarget;\n    targetDiv.classList.add(\"edit-todo\");\n    FormController.populateEditTodoForm(+todoIdentifierNum, targetDiv);\n    console.log(event.currentTarget);\n  }\n  static deleteTodo(event, todoIdentifierNum) {\n    console.log(`called deleteTodo on Todo id ${todoIdentifierNum}`);\n    app.findAndDeleteTodo(+todoIdentifierNum);\n    this.renderAllProjects();\n  }\n\n  static #addSvgIcon(iconText, iconAction, todoId) {\n    const icon = document.createElement(\"span\");\n    icon.classList.add(\"material-symbols-outlined\");\n    icon.textContent = iconText;\n    icon.dataset.iconAction = iconAction ?? iconText;\n    return icon;\n  }\n  static renderAllProjects() {\n    const projectElements = [];\n    app.listProjects((project, projectIndex) => {\n      const projectDiv = ScreenController.#addProject(project, projectIndex);\n      project.listTodos((todo) => {\n        const todoDiv = ScreenController.#addTodo(todo);\n        projectDiv.appendChild(todoDiv);\n      });\n      projectElements.push(projectDiv);\n    });\n    this.contentDiv.replaceChildren(...projectElements);\n  }\n\n  static renderFilteredTodos(func) {\n    const projectElements = [];\n    app.listProjects((project) => {\n      const projectDiv = ScreenController.#addProject(project);\n      const filteredTodos = project.filter((todo) => func(todo) === true);\n      for (let todo of filteredTodos) {\n        const todoDiv = ScreenController.#addTodo(todo);\n        projectDiv.appendChild(todoDiv);\n        projectElements.push(projectDiv);\n      }\n    });\n    this.contentDiv.replaceChildren(...projectElements);\n  }\n\n  static #createExpandedTodoInformation(todo) {\n    const divExpanded = document.createElement(\"div\");\n    divExpanded.classList.add(\"hiddenDetails\");\n    divExpanded.classList.add(\"expanded-information\");\n    const paragraphDescription = document.createElement(\"p\");\n    paragraphDescription.classList.add(\"description\");\n    const paragraphCreationDate = document.createElement(\"p\");\n    paragraphCreationDate.classList.add(\"creation-date\");\n    paragraphDescription.textContent = todo.description;\n    paragraphCreationDate.textContent = todo.creationTime;\n    divExpanded.append(paragraphDescription, paragraphCreationDate);\n\n    return divExpanded;\n  }\n\n  static expandTodo(event, todoId, divExtraInformation) {\n    const targetExtraInfo = divExtraInformation;\n    targetExtraInfo.classList.toggle(\"hiddenDetails\");\n  }\n}\n","import { app } from \"./app\";\nimport { ScreenController } from \"./screenController\";\nimport { isPast, format } from \"date-fns\";\nexport class FormController {\n  static forms = document.forms;\n  static addProjectForm = {\n    dialog: document.querySelector(\"#add-project-dialog\"),\n  };\n  static addTodoForm = {\n    dialog: document.querySelector(\"#add-todo-dialog\"),\n    formElement: document.querySelector(\"#add-todo-form\"),\n    projectFieldset: document.querySelector(\"#project-fieldset\"),\n    duedate: document.querySelector(\"#duedate\"),\n    addNewProject: {\n      radio: document.querySelector(\"#new-project-radio\"),\n      textInput: document.querySelector(\"#new-project-input-name\"),\n    },\n    addExistingProject: {\n      radio: document.querySelector(\"#existing-project-radio\"),\n      selectInput: document.querySelector(\"#parent-project\"),\n    },\n    // submitBtn: document.querySelector(\"#submit-button\"),\n    // closeBtn: document.querySelector(\"#close-dialog-button\"),\n  };\n  static init() {\n    this.formEventListeners();\n    this.#checkNewProject();\n  }\n  static formEventListeners() {\n    for (let form of this.forms) {\n      // form.addEventListener(\"click\", (event)=>event.target.dataset.action)\n      form.addEventListener(\"submit\", (event) => {\n        console.log(event.submitter);\n        if (event.submitter.dataset.action === \"close\") {\n          return;\n        }\n        console.log(\"read form\");\n        console.log(event.target);\n        this.#readForm(event.target);\n        event.target.reset();\n        //need to call check new project to prevent bug of a disabled radio being checked\n        this.#checkNewProject();\n        return;\n      });\n    }\n\n    //now I need the events to delegate to the project field to avoid two event listeners calling the same function\n    this.addTodoForm.projectFieldset.addEventListener(\"change\", (event) => {\n      if (event.target.tagName === \"INPUT\") {\n        this.#checkNewProject();\n      }\n    });\n    this.addTodoForm.duedate.addEventListener(\"change\", (event) => {\n      console.log(event.target);\n      this.#checkValidDuedate();\n    });\n  }\n\n  static #readForm(formElement, todo) {\n    const formData = new FormData(formElement);\n\n    if (formElement === this.addTodoForm.formElement) {\n      console.log(formData.has(\"description\"));\n      console.log(formData.get(\"description\"));\n      console.log(\n        formData.get(\"parent-project\"),\n        formData.get(\"new-project-name\")\n      );\n      app.addNewTodo({\n        title: formData.get(\"task-name\"),\n        description: formData.get(\"description\"),\n        duedate:\n          formData.get(\"duedate\") === \"\"\n            ? \"\"\n            : new Date(formData.get(\"duedate\")),\n        priority: formData.get(\"priority\"),\n        //parent project passes the index of the project\n\n        project:\n          formData.get(\"project-selection\") === \"existing\"\n            ? { type: \"index\", projectIndex: formData.get(\"parent-project\") }\n            : { type: \"name\", projectName: formData.get(\"new-project-name\") },\n      });\n      //TODO Add new project\n    } else if (formElement === this.forms[\"add-project-form\"]) {\n      app.addNewProject(formData.get(\"project-name\"));\n    } else if (formElement.dataset.action === \"updateTodo\") {\n      for (let [key, value] of formData) {\n        console.log(key, value);\n        // console.log(formElement.dataset);\n        app[formElement.dataset.action](todo, key, value);\n      }\n    }\n    //I dont think this is supposed to be here, but I moved it from the forms listeners since any reading of the form will have to result in the rendering of the screen\n    ScreenController.renderAllProjects();\n  }\n  static #checkValidDuedate() {\n    return isPast(this.addTodoForm.duedate);\n  }\n  static #checkNewProject() {\n    if (this.addTodoForm.addNewProject.radio.checked === true) {\n      console.log(\"user wants a new project\");\n      this.addTodoForm.addNewProject.textInput.setAttribute(\"required\", \"\");\n      this.addTodoForm.addExistingProject.selectInput.setAttribute(\n        \"disabled\",\n        \"\"\n      );\n      this.addTodoForm.addNewProject.textInput.removeAttribute(\"disabled\");\n    } else if (this.addTodoForm.addExistingProject.radio.checked === true) {\n      this.addTodoForm.addNewProject.textInput.setAttribute(\"disabled\", \"true\");\n      this.addTodoForm.addExistingProject.selectInput.removeAttribute(\n        \"disabled\"\n      );\n    }\n  }\n\n  static populateAddTodoForm(dataAttribute) {\n    this.#populateExistingProjects(\n      this.addTodoForm.addExistingProject.selectInput\n    );\n    this.#setMinValidDuedate(this.addTodoForm.duedate);\n  }\n\n  static populateEditTodoForm(todoId, targetTodoDiv) {\n    const targetTodo = app.findTodoById(+todoId);\n    const targetDiv = targetTodoDiv;\n    const form = document.createElement(\"form\");\n    form.classList.add(\"edit-todo-form\");\n    form.dataset.action = \"updateTodo\";\n    const heading = document.createElement(\"h3\");\n    heading.textContent = \"Edit Todo Form\";\n\n    const formElements = [];\n    const divTitle = this.#createLabelInputPair(\n      \"edit-title\",\n      \"title\",\n      \"Name\",\n      \"text\",\n      targetTodo.title\n    );\n    formElements.push(divTitle);\n\n    const divDescription = this.#createLabelInputPair(\n      \"edit-description\",\n      \"description\",\n      \"Description\",\n      \"textarea\",\n      targetTodo.description\n    );\n    formElements.push(divDescription);\n\n    const divDueDate = this.#createLabelInputPair(\n      \"edit-duedate\",\n      \"duedate\",\n      \"Set Duedate\",\n      \"date\",\n      targetTodo.duedate === \"\" ? \"\" : format(targetTodo.duedate, \"yyyy-MM-dd\")\n    );\n    console.log(targetTodo.duedate);\n    const selectProject = this.#createLabelInputPair(\n      \"edit-project\",\n      \"moveProject\",\n      \"Move to project\",\n      \"select\",\n      targetTodo.parentProject\n    );\n\n    const selectPriority = this.#createLabelInputPair(\n      \"edit-priority\",\n      \"priority\",\n      \"Priority\",\n      \"number\",\n      targetTodo.priority\n    );\n    selectPriority.lastElementChild.setAttribute(\"min\", 1);\n    selectPriority.lastElementChild.setAttribute(\"max\", 3);\n    selectPriority.lastElementChild.setAttribute(\"value\", targetTodo.priority);\n\n    const submitCloseBtnContainer = document.createElement(\"div\");\n    submitCloseBtnContainer.classList.add(\"submit-close-button-container\");\n    const submitBtn = document.createElement(\"button\");\n    submitBtn.dataset.action = \"submit\";\n    submitBtn.textContent = \"Edit\";\n    const closeBtn = document.createElement(\"button\");\n    closeBtn.dataset.action = \"close\";\n    closeBtn.textContent = \"Cancel\";\n    submitCloseBtnContainer.append(submitBtn, closeBtn);\n\n    form.append(\n      divTitle,\n      divDescription,\n      divDueDate,\n      selectProject,\n      selectPriority,\n      submitCloseBtnContainer\n    );\n    form.addEventListener(\n      \"submit\",\n      (event) => {\n        this.#readForm(event.currentTarget, targetTodo);\n        event.preventDefault();\n      },\n      { once: true }\n    );\n    // form.addEventListener(\"\")\n    targetDiv.replaceChildren(heading, form);\n  }\n  static #createLabelInputPair(\n    idAttribute,\n    nameAttribute,\n    labelText,\n    inputType,\n    inputOldValue\n  ) {\n    const div = document.createElement(\"div\");\n    let input;\n    if (inputType === \"select\") {\n      input = document.createElement(\"select\");\n      this.#populateExistingProjects(input);\n    } else {\n      input = document.createElement(\"input\");\n      input.type = inputType;\n    }\n    const label = document.createElement(\"label\");\n    input.id = idAttribute;\n    input.value = inputOldValue;\n    input.setAttribute(\"name\", nameAttribute);\n    label.setAttribute(\"for\", idAttribute);\n    label.textContent = labelText;\n    if (inputType === \"date\") {\n      this.#setMinValidDuedate(input);\n    }\n\n    div.append(label, input);\n    div.classList.add(\"label-input-container\");\n    return div;\n  }\n\n  //Todo change from adding element option to use the add method of the htmlselectelement api\n  static #populateExistingProjects(selectInput) {\n    const projectSelect = selectInput;\n    const optionsToAdd = [];\n    app.listProjects((project, projectIndex) => {\n      const selectOption = document.createElement(\"option\");\n      selectOption.value = projectIndex;\n      selectOption.textContent = project.name;\n      optionsToAdd.push(selectOption);\n    });\n    console.log(optionsToAdd);\n    projectSelect.replaceChildren(...optionsToAdd);\n  }\n  static #setMinValidDuedate(duedateInput) {\n    duedateInput.setAttribute(\"min\", format(Date(), \"yyyy-MM-dd\"));\n  }\n}\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isPast\n * @category Common Helpers\n * @summary Is the given date in the past?\n * @pure false\n *\n * @description\n * Is the given date in the past?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is in the past\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * const result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\nexport function isPast(date) {\n  return +toDate(date) < Date.now();\n}\n\n// Fallback for modularized imports:\nexport default isPast;\n","// import { defaultProject } from \"./project\";\nimport { Todo } from \"./todo\";\nimport { Project } from \"./project\";\nimport { FormController } from \"./FormController\";\nimport { ScreenController } from \"./screenController\";\nclass App {\n  projects = [];\n\n  init() {\n    //make default project\n    console.log(\"init\");\n    // const defaultProject = this.addNewProject(\"Default\");\n    ScreenController.init();\n    FormController.init();\n    this.loadData();\n  }\n  clearLocalStorage() {\n    localStorage.clear();\n    this.loadData();\n    ScreenController.renderAllProjects();\n  }\n  loadData() {\n    //Check if theres data to load\n    if (!localStorage.getItem(\"savedProjects\")) {\n      console.log(\"no data to load\");\n      const defaultProject = this.addNewProject(\"Default\");\n      this.projects = [];\n      this.mockData();\n      return;\n    }\n\n    const data = localStorage.getItem(\"savedProjects\");\n    const parsedData = JSON.parse(data);\n    //call app.addNewProject\n    for (const project of parsedData) {\n      const newProject = this.addNewProject(project.name, project.description);\n      console.log(newProject);\n      for (const task of project.todoList) {\n        const newTodo = Todo.loadTodo(task, newProject);\n        newProject.addToProject(newTodo);\n        // const todo = Todo.loadTodo(task)\n        // newProject.addToProject()\n      }\n    }\n  }\n\n  mockData() {\n    const mock = {\n      task1: {\n        title: \"dishes\",\n        description: \"do the dishes\",\n\n        priority: 3,\n      },\n      task2: {\n        title: \"study\",\n        description: \"math today\",\n\n        priority: 1,\n      },\n      task3: {\n        title: \"walk dog\",\n        description: \"boo\",\n\n        priority: 2,\n        project: { type: \"name\", projectName: \"Home\" },\n      },\n    };\n    for (const [key, value] of Object.entries(mock)) {\n      this.addNewTodo(value);\n    }\n  }\n  saveData() {\n    //What is of our interest?\n    //Todos and projects properties, methods cant be saved.\n    //methods inside the class are non enumerable by default\n    localStorage.setItem(\"savedProjects\", JSON.stringify(app.projects));\n  }\n  addNewTodo({\n    title,\n    description,\n    duedate,\n    priority,\n    project = {\n      type: \"index\",\n      projectName: \"Default\",\n      projectIndex: 0,\n    },\n  }) {\n    console.log(project);\n    //leverage destructuring assignment\n    // if (project.type===\"name\"){\n    // projectName = projectName ?? \"Default\";\n    // const project = this.findProject(projectName);\n    //Need to figure out better how I want the client to be able to input the project\n    //will default always be the choice? Should I warn them when I create a new project?\n    //atm this functions is making three things, two reasons of change:\n    //its adding a todo\n    //its looking if a given project exists\n    //and if not its creating one\n    //TODO\n    if (project.type === \"name\") {\n      const newProject = this.addNewProject(project.projectName);\n      return newProject.addToProject(\n        new Todo(title, description, duedate, priority, newProject)\n      );\n    } else {\n      if (this.projects.length === 0) {\n        project = {\n          type: \"index\",\n          projectName: \"Default\",\n          projectIndex: 0,\n        };\n        this.addNewProject(project.projectName);\n      }\n\n      const projectObj = this.projects[project.projectIndex];\n\n      return projectObj.addToProject(\n        new Todo(title, description, duedate, priority, projectObj)\n      );\n    }\n  }\n\n  #completeTodo(todo) {\n    todo.completed = true;\n  }\n  findAndToggleCompletedTodo(todoid) {\n    const todo = this.findTodoById(+todoid);\n    console.log(todo);\n    todo.completed = todo.completed === true ? false : true;\n    console.log(todo);\n  }\n  #deleteTodo(todo, project) {\n    project.removeFromProject(todo);\n  }\n  findAndDeleteTodo(todoId) {\n    const todo = this.findTodoById(todoId);\n    console.log(todo);\n    console.log(todo.parentProject);\n    const parentProject = todo.parentProject;\n    this.#deleteTodo(todo, parentProject);\n  }\n\n  deleteProject(projectArrayPosition) {\n    console.log(this.projects[projectArrayPosition]);\n    this.projects.splice(projectArrayPosition, 1);\n    console.log(this.projects);\n  }\n  // changeTodoPriority(todo, priority) {\n  //   if (priority > 3 || priority < 1) {\n  //     throw new Error(\"priority must be 1 2 or 3\");\n  //     return;\n  //   }\n  //   const oldPriority = todo.priority;\n  //   todo.priority = priority;\n  //   console.log(\n  //     `Todo ${todo.title} priority changed from ${oldPriority} to ${todo.priority}`\n  //   );\n  //   return todo;\n  // }\n  addNewProject(projectName, description) {\n    const newProject = new Project(projectName, description);\n    this.projects.push(newProject);\n    // newProject.arrayIndex = this.projects.push(newProject) - 1;\n    return newProject;\n    // return newProject;\n  }\n  findProject(projectName) {\n    for (let [projectIndex, project] of this.projects.entries()) {\n      //   console.log(project);\n      if (project.name === projectName) {\n        return [projectIndex, project];\n      }\n    }\n    return false;\n  }\n  findInProjects(todo) {\n    const foundIndices = [];\n    for (let project of this.projects) {\n      if (project.getTaskByIndex(todo) !== false) {\n        foundIndices.push({\n          project: project,\n          taskIndex: project.getTaskByIndex(todo),\n        });\n      }\n    }\n\n    return foundIndices;\n  }\n  findTodoById(todoId) {\n    for (const project of this.projects) {\n      const todo = project.find(\"Id\", todoId);\n      if (todo instanceof Todo) return todo;\n    }\n    console.log(`todo id ${todoId} not found`);\n  }\n  updateTodo(todo, property, propertyValue) {\n    if (property === \"moveProject\") {\n      this.moveTodo(todo, propertyValue);\n    } else {\n      todo[property] = propertyValue;\n    }\n  }\n  moveTodo(todo, newProjectName) {\n    const currentProject = todo.parentProject;\n    currentProject.removeFromProject(todo);\n    todo.parentProject = null;\n    const [targetProjectId, targetProjectObj] =\n      this.findProject(newProjectName);\n    targetProjectObj.addToProject(todo);\n    todo.parentProject = targetProjectObj;\n\n    return targetProjectObj.listTodos();\n  }\n  //TODO i want to add a function to be applied to each project\n  listProjects(func, func2) {\n    for (let [projectIndex, project] of this.projects.entries()) {\n      // console.log(projectIndex, project);\n      func(project, projectIndex);\n      // console.log(project.toString());\n    }\n  }\n}\n\nconst app = new App();\nexport { app };\n","import { Todo } from \"./todo\";\nimport { app } from \"./app\";\nimport { Project } from \"./project\";\nimport { FormController } from \"./FormController\";\nimport { ScreenController } from \"./screenController\";\nimport \"./style.css\";\n\napp.init();\n\nScreenController.renderAllProjects();\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","Math","pow","millisecondsInWeek","millisecondsInDay","minutesInMonth","minutesInDay","toDate","argument","argStr","Object","prototype","toString","call","Date","constructor","NaN","startOfDay","date","_date","setHours","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","differenceInCalendarDays","dateLeft","dateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","options","width","String","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","value","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","key","Array","isArray","array","predicate","findIndex","object","hasOwnProperty","findKey","valueCallback","rest","slice","enUS","code","formatDistance","token","count","result","tokenValue","addSuffix","comparison","formatRelative","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","constructFrom","getDayOfYear","cleanDate","setFullYear","startOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","d","a","dayPeriodEnumValue","toUpperCase","h","H","m","s","S","numberOfDigits","milliseconds","trunc","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","toLowerCase","b","hours","B","K","k","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","pattern","timeLongFormatter","longFormatters","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","format","formatStr","originalDate","RangeError","parts","map","substring","firstCharacter","longFormatter","join","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","input","_message","subject","message","console","warn","includes","warnOrThrowProtectedError","formatter","matched","compareAsc","_dateLeft","_dateRight","isLastDayOfMonth","endOfDay","endOfMonth","differenceInMonths","difference","differenceInCalendarMonths","setMonth","isLastMonthNotFull","differenceInSeconds","differenceInMilliseconds","method","roundingMethod","formatDistanceToNow","baseDate","localizeOptions","assign","seconds","offsetInSeconds","months","includeSeconds","days","nearestMonth","monthsSinceStartOfYear","years","now","constructNow","Todo","completed","static","title","description","duedate","priority","parentProject","todoPriority","Id","todoIdControl","newpriority","oldPriority","log","savedCreationDate","creationTime","loadCreationDate","timeToDuedate","loadTodo","taskData","task","createdIn","toJSON","data","Project","todoList","name","addToProject","push","removeFromProject","taskIndex","splice","indexOf","find","property","todo","filter","fun","returnTodos","currentTodo","listTodos","func","todoListStr","undefined","loadProject","projectJSONString","parsedProject","JSON","parse","saveProject","stringify","ScreenController","querySelector","container","weekDay","monthDay","buttonContainer","addTodo","addProject","removeProject","init","renderAllProjects","initEventListeners","buttons","addEventListener","event","target","tagName","dataset","dialog","action","app","contentDiv","iconAction","dateDiv","textContent","dialogTarget","FormController","showModal","populateAddTodoForm","project","projectIndex","div","createElement","classList","add","span","append","deleteProject","currentTarget","expandIcon","checkCompleted","checkCompletedInput","type","checked","divHeader","spanTaskName","divParagraphDueDate","todoId","divExtraInformation","toggleCompletedTodo","findAndToggleCompletedTodo","todoDiv","contains","editTodo","todoIdentifierNum","targetDiv","populateEditTodoForm","deleteTodo","findAndDeleteTodo","iconText","icon","projectElements","listProjects","projectDiv","appendChild","replaceChildren","renderFilteredTodos","filteredTodos","divExpanded","paragraphDescription","paragraphCreationDate","expandTodo","toggle","forms","formElement","projectFieldset","addNewProject","radio","textInput","addExistingProject","selectInput","formEventListeners","form","submitter","reset","addTodoForm","formData","FormData","has","get","addNewTodo","projectName","setAttribute","removeAttribute","dataAttribute","targetTodoDiv","targetTodo","findTodoById","heading","formElements","divTitle","divDescription","divDueDate","selectProject","selectPriority","lastElementChild","submitCloseBtnContainer","submitBtn","closeBtn","preventDefault","once","idAttribute","nameAttribute","labelText","inputType","inputOldValue","label","id","projectSelect","optionsToAdd","selectOption","duedateInput","projects","loadData","clearLocalStorage","localStorage","clear","getItem","mockData","parsedData","newProject","newTodo","mock","task1","task2","task3","entries","saveData","setItem","projectObj","todoid","projectArrayPosition","findProject","findInProjects","foundIndices","getTaskByIndex","updateTodo","propertyValue","moveTodo","newProjectName","targetProjectId","targetProjectObj","func2"],"sourceRoot":""}